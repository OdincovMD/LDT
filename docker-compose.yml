services:
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    environment:
      - HOST=${HOST}
    ports:
      - "${NGINX_PORT:-90}:90"
    depends_on:
      - frontend
      - backend
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/html:/var/www/html
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - BACKEND_URL=${BACKEND_URL}
    environment:
      - NODE_ENV=development
      - WATCHPACK_POLLING=true
      - FRONTEND_PORT=5173
    expose:
      - "5173"
    depends_on:
      - backend
    networks:
      - app-network
    develop:
      watch:
        - action: sync
          path: ./frontend
          target: /app

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_NAME=${DB_NAME}
      - ML_URL=${ML_URL}                  
    expose:
      - "${BACKEND_PORT}"
    depends_on:
      - postgres
      - ml
    networks:
      - app-network

  ml:
    build:
      context: ./ml
    expose:
      - "${ML_PORT}"
    networks:
      - app-network

  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    shm_size: 128mb
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
