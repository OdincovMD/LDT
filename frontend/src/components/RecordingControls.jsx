// components/RecordingControls.jsx
import React from 'react'
import { useSelector, useDispatch } from 'react-redux'
import { startRecording, stopRecording, saveRecording } from '../store/streamSlice'

function RecordingControls() {
  const dispatch = useDispatch()
  const {
    operationMode,      // 'playback' | 'record'
    recordingMode,      // 'idle' | 'recording' | 'reviewing'
    currentCase,
    hasUnsavedChanges,
    dataPoints,
  } = useSelector(state => state.stream)

  // –†–ï–ñ–ò–ú –ü–†–û–°–ú–û–¢–†–ê ‚Äî –Ω–∏–∫–∞–∫–∏—Ö –∫–Ω–æ–ø–æ–∫ –∑–∞–ø–∏—Å–∏
  if (operationMode === 'playback') {
    return (
      <div className="bg-slate-800 rounded-2xl p-4">
        <div className="text-center text-slate-400">
          üìä –†–µ–∂–∏–º –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ ‚Äî –∑–∞–ø–∏—Å—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞
        </div>
        <div className="text-center text-sm text-slate-500 mt-1">
          –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º ¬´–ó–∞–ø–∏—Å—å¬ª, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø—Ä–∏—ë–º –¥–∞–Ω–Ω—ã—Ö
        </div>
      </div>
    )
  }

  // –†–ï–ñ–ò–ú –ó–ê–ü–ò–°–ò
  const canStart = currentCase && recordingMode !== 'recording'
  const canStop = recordingMode === 'recording'
  const canSave = (dataPoints?.length ?? 0) > 0 && !canStop // —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–ª—å–∫–æ –∫–æ–≥–¥–∞ –Ω–µ –ø–∏—à–µ–º

  return (
    <div className="bg-slate-800 rounded-2xl p-4">
      <div className="flex flex-wrap items-center justify-center gap-3">
        {/* START */}
        <button
          onClick={() => dispatch(startRecording())}
          className="bg-green-600 hover:bg-green-700 px-6 py-3 rounded-lg text-white font-semibold disabled:opacity-50"
          disabled={!canStart}
          title={!currentCase ? '–í—ã–±–µ—Ä–∏—Ç–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ' : ''}
        >
          ‚ñ∂Ô∏è –ù–∞—á–∞—Ç—å –∑–∞–ø–∏—Å—å
        </button>

        {/* STOP */}
        <button
          onClick={() => dispatch(stopRecording())}
          className="bg-yellow-600 hover:bg-yellow-700 px-6 py-3 rounded-lg text-white font-semibold disabled:opacity-50"
          disabled={!canStop}
        >
          ‚è∏Ô∏è –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–ø–∏—Å—å
        </button>

        {/* SAVE */}
        <button
          onClick={() => dispatch(saveRecording())}
          className="bg-red-600 hover:bg-red-700 px-6 py-3 rounded-lg text-white font-semibold disabled:opacity-50"
          disabled={!canSave}
          title={canStop ? '–û—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–ø–∏—Å—å –ø–µ—Ä–µ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º' : ''}
        >
          ‚è∫Ô∏è –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏ –ø–µ—Ä–µ–π—Ç–∏ –∫ –ø—Ä–æ—Å–º–æ—Ç—Ä—É
        </button>
      </div>

      {/* –ò–Ω–¥–∏–∫–∞—Ü–∏—è —Å—Ç–∞—Ç—É—Å–∞ */}
      <div className="text-center mt-3 text-sm">
        {recordingMode === 'recording' ? (
          <span className="text-green-400">üü¢ –ó–∞–ø–∏—Å—å –∞–∫—Ç–∏–≤–Ω–∞</span>
        ) : hasUnsavedChanges ? (
          <span className="text-amber-300">üü† –ï—Å—Ç—å –Ω–µ—Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ</span>
        ) : (
          <span className="text-slate-400">‚ö™ –û–∂–∏–¥–∞–Ω–∏–µ –Ω–∞—á–∞–ª–∞ –∑–∞–ø–∏—Å–∏</span>
        )}
      </div>

      {/* –ü–æ–¥—Å–∫–∞–∑–∫–∞ –ø–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É */}
      {!currentCase && (
        <div className="text-center text-xs text-slate-500 mt-2">
          –í—ã–±–µ—Ä–∏—Ç–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ, —á—Ç–æ–±—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∑–∞–ø–∏—Å—å
        </div>
      )}
    </div>
  )
}

export default RecordingControls
