user  nginx;
worker_processes  auto;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    sendfile      on;
    tcp_nopush    on;
    tcp_nodelay   on;
    keepalive_timeout 65;
    server_tokens off;

    gzip on;
    gzip_types text/plain text/css application/json application/javascript application/xml+rss image/svg+xml;
    gzip_min_length 1024;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    # upstream'ы внутри docker-сети
    upstream frontend_upstream {
        server frontend:${FRONTEND_PORT};
        keepalive 32;
    }

    upstream backend_upstream {
        server backend:${BACKEND_PORT};
        keepalive 32;
    }

    server {
        listen ${NGINX_PORT};
        server_name _;

        # ===== WebSocket - доступен извне =====
        location ^~ /ws/ {
            proxy_http_version 1.1;
            proxy_set_header Upgrade            $http_upgrade;
            proxy_set_header Connection         $connection_upgrade;
            proxy_set_header Host               $host;
            proxy_set_header X-Real-IP          $remote_addr;
            proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto  $scheme;

            proxy_buffering off;
            proxy_read_timeout  3600s;
            proxy_send_timeout  3600s;

            proxy_pass http://backend:${BACKEND_PORT};
        }

        # ===== FRONTEND - доступен извне =====
        location / {
            proxy_http_version 1.1;
            proxy_set_header Host              $host;
            proxy_set_header X-Real-IP         $remote_addr;
            proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Upgrade           $http_upgrade;
            proxy_set_header Connection        $connection_upgrade;
            proxy_pass http://frontend_upstream;
        }

        # ===== API и документация - ТОЛЬКО для внутреннего доступа =====
        location ^~ /api/ {
            allow 127.0.0.1;
            allow 188.120.235.203;
            deny all;

            proxy_http_version 1.1;
            proxy_set_header Host              $host;
            proxy_set_header X-Real-IP         $remote_addr;
            proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection        "";

            rewrite ^/api/?(.*)$ /$1 break;
            proxy_pass http://backend_upstream;
        }

        location = /docs {
            allow 127.0.0.1;
            allow 188.120.235.203;
            deny all;

            proxy_set_header Host              $host;
            proxy_set_header X-Real-IP         $remote_addr;
            proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_pass http://backend_upstream;
        }

        location = /openapi.json {
            allow 127.0.0.1;
            allow 188.120.235.203;
            deny all;

            proxy_set_header Host              $host;
            proxy_set_header X-Real-IP         $remote_addr;
            proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_pass http://backend_upstream;
        }

        client_max_body_size 16m;
        proxy_connect_timeout 5s;
        proxy_send_timeout   60s;
        proxy_read_timeout   60s;
    }
}